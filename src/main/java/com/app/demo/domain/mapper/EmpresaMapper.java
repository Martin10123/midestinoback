package com.app.demo.domain.mapper;

import com.app.demo.domain.dto.EmpresaDTO;
import com.app.demo.persistence.entity.Empresa;

public class EmpresaMapper {

    public static EmpresaDTO toDTO(Empresa empresa) {
        return EmpresaDTO.builder()
                .idEmpresa(empresa.getIdEmpresa())
                .tipoUsuario(empresa.getTipoUsuario())
                .fotoPerfil(empresa.getFotoPerfil())
                .nombre(empresa.getNombre())
                .razonSocial(empresa.getRazonSocial())
                .nit(empresa.getNit())
                .sector(empresa.getSector())
                .fechaFundacion(empresa.getFechaFundacion())
                .direccion(empresa.getDireccion())
                .ciudad(empresa.getCiudad())
                .telefono(empresa.getTelefono())
                .correo(empresa.getCorreo())
                .web(empresa.getWeb())
                .numeroRegistroMercantil(empresa.getNumeroRegistroMercantil())
                .fechaRegistro(empresa.getFechaRegistro())
                .ganancias(empresa.getGanancias())
                .entidadRegistro(empresa.getEntidadRegistro())
                .tipoSociedad(empresa.getTipoSociedad())
                .nombreRepresentanteLegal(empresa.getNombreRepresentanteLegal())
                .numeroDocumentoRepresentanteLegal(empresa.getNumeroDocumentoRepresentanteLegal())
                .cargoPropietario(empresa.getCargoPropietario())
                .nombrePropietarioPrincipal(empresa.getNombrePropietarioPrincipal())
                .certificadoExistencia(empresa.getCertificadoExistencia())
                .RUT(empresa.getRUT())
                .estadosFinancieros(empresa.getEstadosFinancieros())
                .notariaRegistro(empresa.getNotariaRegistro())
                .otrosDocumentosLegales(empresa.getOtrosDocumentosLegales())
                .confirmacion(empresa.isConfirmación())
                .firmaRepresentanteLegal(empresa.getFirmaRepresentanteLegal())
                .fechaFirma(empresa.getFechaFirma())
                .empresaFueAceptada(empresa.isEmpresaFueAceptada())
                .empresaFueAceptadaPorAdmin(empresa.isEmpresaFueAceptadaPorAdmin())
                .empresaTuvoRespuesta(empresa.isEmpresaTuvoRespuesta())
                .contrasena(empresa.getContrasena())
                .build();
    }

    public static Empresa toEntity(EmpresaDTO empresaDTO) {
        return Empresa.builder()
                .idEmpresa(empresaDTO.getIdEmpresa())
                .tipoUsuario(empresaDTO.getTipoUsuario())
                .nombre(empresaDTO.getNombre())
                .fotoPerfil(empresaDTO.getFotoPerfil())
                .razonSocial(empresaDTO.getRazonSocial())
                .nit(empresaDTO.getNit())
                .sector(empresaDTO.getSector())
                .fechaFundacion(empresaDTO.getFechaFundacion())
                .direccion(empresaDTO.getDireccion())
                .ciudad(empresaDTO.getCiudad())
                .telefono(empresaDTO.getTelefono())
                .correo(empresaDTO.getCorreo())
                .web(empresaDTO.getWeb())
                .ganancias(empresaDTO.getGanancias())
                .numeroRegistroMercantil(empresaDTO.getNumeroRegistroMercantil())
                .fechaRegistro(empresaDTO.getFechaRegistro())
                .entidadRegistro(empresaDTO.getEntidadRegistro())
                .tipoSociedad(empresaDTO.getTipoSociedad())
                .nombreRepresentanteLegal(empresaDTO.getNombreRepresentanteLegal())
                .numeroDocumentoRepresentanteLegal(empresaDTO.getNumeroDocumentoRepresentanteLegal())
                .cargoPropietario(empresaDTO.getCargoPropietario())
                .nombrePropietarioPrincipal(empresaDTO.getNombrePropietarioPrincipal())
                .certificadoExistencia(empresaDTO.getCertificadoExistencia())
                .RUT(empresaDTO.getRUT())
                .estadosFinancieros(empresaDTO.getEstadosFinancieros())
                .notariaRegistro(empresaDTO.getNotariaRegistro())
                .otrosDocumentosLegales(empresaDTO.getOtrosDocumentosLegales())
                .confirmación(empresaDTO.isConfirmacion())
                .firmaRepresentanteLegal(empresaDTO.getFirmaRepresentanteLegal())
                .fechaFirma(empresaDTO.getFechaFirma())
                .empresaFueAceptada(empresaDTO.isEmpresaFueAceptada())
                .empresaFueAceptadaPorAdmin(empresaDTO.isEmpresaFueAceptadaPorAdmin())
                .empresaTuvoRespuesta(empresaDTO.isEmpresaTuvoRespuesta())
                .contrasena(empresaDTO.getContrasena())
                .build();
    }
}
